<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>A learner&#39;s Blog</title>
<link>https://hstaudt.github.io/blog.html</link>
<atom:link href="https://hstaudt.github.io/blog.xml" rel="self" type="application/rss+xml"/>
<description>Heikos personal Weblog</description>
<generator>quarto-1.4.553</generator>
<lastBuildDate>Tue, 23 Apr 2024 22:00:00 GMT</lastBuildDate>
<item>
  <title>Linux Retro</title>
  <dc:creator>hstaudt </dc:creator>
  <link>https://hstaudt.github.io/posts/2024/04/retro.html</link>
  <description><![CDATA[ 





<p>More and more often I find software overloaded, blown-up too noisy. I often tried to use good old console programs (like alpine mail) but often got stuck at some point because I ran into trouble with authenticating to a service. So I continued using Thunderbird. Or when a account i integrated into the Gnome Desktop told me, that a token was no longer valid…</p>
<p>So I’ll try to go back to the roots and</p>
<ul>
<li>install a console-only linux (done!)</li>
<li>find E-Mail Programs that work with Microsoft’s outlook.com, google and IMAP4/SMTP. This can also be inside Emacs, (Neo-)vim or anything else. But it should work reliably.</li>
<li>Web-Browsing might be difficult. I do prefer text-only browsing, but most of the web is -well, I’d say uncomfortable without a graphical browser.</li>
<li>I also like <a href="https://logseq.com/">LogSeq</a>, which is availble as AppImage.</li>
</ul>
<p>So I’ll do <em>startx</em> as in the early days :-)</p>
<p>With that in mind I simply did a google search for linux consolse as a daily driver. Wow - there are still many console-fans out there! Here some things I found in no specific order.</p>
<ul>
<li>I should have a look at <a href="https://github.com/tmux/tmux/wiki/Getting-Started">tmux</a> and zshell.</li>
<li>Give <a href="https://neovim.io/">Neovim</a> a try. Here’s a <a href="https://www.youtube.com/watch?v=6pAG3BHurdM">video</a> by Josean Martinez on how to make it amazing.</li>
<li><a href="https://qutebrowser.org/">qutebrowser</a> is a lightweight browser</li>
<li><a href="https://github.com/jarun/nnn">nnn</a> a cool filemanager</li>
<li><a href="https://github.com/neomutt/neomutt/tree/main/contrib/oauth2">NeoMutt and OAuth2</a></li>
<li><a href="https://dataswap.org/~solenne">Solène Rapenne</a> started the <a href="https://dataswamp.org/~solene/2021-07-07-old-computer-challenge.html">The Old Computer Challenge</a>.</li>
<li><a href="https://ohio.araw.xyz/">Ohio Olarte</a> took the challenge and <a href="https://ohio.araw.xyz/old-computer/">wrote about it</a></li>
</ul>



 ]]></description>
  <category>linux</category>
  <category>retro</category>
  <category>console</category>
  <guid>https://hstaudt.github.io/posts/2024/04/retro.html</guid>
  <pubDate>Tue, 23 Apr 2024 22:00:00 GMT</pubDate>
</item>
<item>
  <title>curses and python</title>
  <dc:creator>hstaudt </dc:creator>
  <link>https://hstaudt.github.io/posts/2023/08/chuck.html</link>
  <description><![CDATA[ 





<p>While figuring out a way to create curses-based GUIs in Windows-Terminal i found Sean Zicari’s useful talk <a href="https://www.youtube.com/watch?v=eN1eZtjLEnU">Use curses, don’t swear</a>. Although I could not get urwid to work without cygwin, the “curses-part” helped me getting started with python’s curses.</p>
<p>So I reproduced his <a href="https://github.com/SeanZicari/pycon-curses">Chuck Norris quotes</a>. Some packages he used don’t work under windows either (because of missing fnctl). But anyway: Here is the result:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> curses</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> urllib.request <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Request, urlopen</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> simplejson <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> load</span>
<span id="cb1-4"></span>
<span id="cb1-5"></span>
<span id="cb1-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> get_new_joke():</span>
<span id="cb1-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">try</span>:</span>
<span id="cb1-8">        _data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> urlopen(Request(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://api.chucknorris.io/jokes/random'</span>, headers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"User-Agent"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>}))</span>
<span id="cb1-9">        joke_json <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> load(_data)</span>
<span id="cb1-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">except</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Exception</span> <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> e:</span>
<span id="cb1-11">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(e))</span>
<span id="cb1-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> (joke_json[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'value'</span>])</span>
<span id="cb1-13"></span>
<span id="cb1-14"></span>
<span id="cb1-15">stdscr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> curses.initscr()</span>
<span id="cb1-16"></span>
<span id="cb1-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Properly initialize the screen</span></span>
<span id="cb1-18">curses.noecho()</span>
<span id="cb1-19">curses.cbreak()</span>
<span id="cb1-20">curses.curs_set(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb1-21"></span>
<span id="cb1-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check for and begin color support</span></span>
<span id="cb1-23"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> curses.has_colors():</span>
<span id="cb1-24">    curses.start_color()</span>
<span id="cb1-25"></span>
<span id="cb1-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Optionally enable the</span></span>
<span id="cb1-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#stdscr.keypad(1)</span></span>
<span id="cb1-28"></span>
<span id="cb1-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Initialize the color combinations we're going to use</span></span>
<span id="cb1-30">curses.init_pair(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, curses.COLOR_RED, curses.COLOR_BLACK)</span>
<span id="cb1-31">curses.init_pair(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, curses.COLOR_GREEN, curses.COLOR_BLACK)</span>
<span id="cb1-32">curses.init_pair(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, curses.COLOR_BLUE, curses.COLOR_BLACK)</span>
<span id="cb1-33"></span>
<span id="cb1-34"></span>
<span id="cb1-35"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># </span><span class="re">BEGIN</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> PROGRAM</span></span>
<span id="cb1-36">stdscr.addstr(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RANDOM QUOTES"</span>, curses.A_REVERSE)</span>
<span id="cb1-37">stdscr.chgat(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, curses.A_REVERSE)</span>
<span id="cb1-38"></span>
<span id="cb1-39">stdscr.addstr(curses.LINES<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Press 'R' to request a new quote, 'Q' to quit"</span>)</span>
<span id="cb1-40"></span>
<span id="cb1-41"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Change the R to green</span></span>
<span id="cb1-42">stdscr.chgat(curses.LINES<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, curses.A_BOLD <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> curses.color_pair(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span>
<span id="cb1-43"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Change the Q to red</span></span>
<span id="cb1-44">stdscr.chgat(curses.LINES<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">35</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, curses.A_BOLD <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> curses.color_pair(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span>
<span id="cb1-45"></span>
<span id="cb1-46"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set up the window to hold the random quotes</span></span>
<span id="cb1-47">quote_window <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> curses.newwin(curses.LINES<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,curses.COLS, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb1-48"></span>
<span id="cb1-49"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a sub-window so as to cleanly display the quote without worrying</span></span>
<span id="cb1-50"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># about overwriting the quote window's borders</span></span>
<span id="cb1-51">quote_text_window <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> quote_window.subwin(curses.LINES<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>,curses.COLS<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb1-52"></span>
<span id="cb1-53">quote_text_window.addstr(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Press 'R' to get your first quote!"</span>)</span>
<span id="cb1-54"></span>
<span id="cb1-55"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Draw a border around the main quote window</span></span>
<span id="cb1-56">quote_window.box()</span>
<span id="cb1-57"></span>
<span id="cb1-58"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Update the internal window data structures</span></span>
<span id="cb1-59">stdscr.noutrefresh()</span>
<span id="cb1-60">quote_window.noutrefresh()</span>
<span id="cb1-61"></span>
<span id="cb1-62"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Redraw the screen</span></span>
<span id="cb1-63">curses.doupdate()</span>
<span id="cb1-64"></span>
<span id="cb1-65"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the event loop</span></span>
<span id="cb1-66"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">while</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>:</span>
<span id="cb1-67">    c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> quote_window.getch()</span>
<span id="cb1-68"></span>
<span id="cb1-69">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">ord</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r'</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">or</span> c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">ord</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'R'</span>):</span>
<span id="cb1-70">        quote_text_window.clear()</span>
<span id="cb1-71">        quote_text_window.addstr(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Getting quote..."</span>, curses.color_pair(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>))</span>
<span id="cb1-72">        quote_text_window.refresh()</span>
<span id="cb1-73">        quote_text_window.clear()</span>
<span id="cb1-74">        quote_text_window.addstr(get_new_joke())</span>
<span id="cb1-75"></span>
<span id="cb1-76">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">elif</span> c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">ord</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'q'</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">or</span> c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">ord</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Q'</span>):</span>
<span id="cb1-77">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">break</span></span>
<span id="cb1-78"></span>
<span id="cb1-79">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Refresh the windows from the bottom up</span></span>
<span id="cb1-80">    stdscr.noutrefresh()</span>
<span id="cb1-81">    quote_window.noutrefresh()</span>
<span id="cb1-82">    quote_text_window.noutrefresh()</span>
<span id="cb1-83">    curses.doupdate()</span>
<span id="cb1-84"></span>
<span id="cb1-85"></span>
<span id="cb1-86"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Restore the terminal settings</span></span>
<span id="cb1-87">curses.nocbreak()</span>
<span id="cb1-88"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#stdscr.keypad(0)</span></span>
<span id="cb1-89">curses.echo()</span>
<span id="cb1-90">curses.curs_set(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb1-91"></span>
<span id="cb1-92"></span>
<span id="cb1-93"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Restore the terminal itself to its "former glory"</span></span>
<span id="cb1-94">curses.endwin()</span></code></pre></div>



 ]]></description>
  <category>learning</category>
  <category>code</category>
  <category>python</category>
  <guid>https://hstaudt.github.io/posts/2023/08/chuck.html</guid>
  <pubDate>Tue, 15 Aug 2023 22:00:00 GMT</pubDate>
</item>
<item>
  <title>First steps in PyQt6</title>
  <dc:creator>hstaudt </dc:creator>
  <link>https://hstaudt.github.io/posts/2023/08/1st_pyqt.html</link>
  <description><![CDATA[ 





<p>It took me some time to get started with PyQt. In case i need it again:</p>
<pre><code>PyQt-builder==1.15.2
PyQt6==6.4.2
PyQt6-Charts==6.5.0
PyQt6-Charts-Qt6==6.5.2
PyQt6-DataVisualization==6.5.0
PyQt6-DataVisualization-Qt6==6.5.2
pyqt6-plugins==6.4.2.2.3
PyQt6-Qt6==6.4.3
PyQt6-sip==13.5.2
pyqt6-tools==6.4.2.3.3
PyQt6-WebEngine==6.5.0
PyQt6-WebEngine-Qt6==6.5.2</code></pre>
<ul>
<li>start the desinger with <code>pyqt6-tools.exe designer</code></li>
<li>save your window in a .ui file</li>
<li>create a .py file from the .ui: <code>pyuic6.exe -o ui_mainwindow.py -x mainwindow.ui</code></li>
<li>import the generated class, subclass it, connect slots, have fun :-)</li>
</ul>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> ui_mainwindow <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Ui_MainWindow</span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> MainWindow(QMainWindow, Ui_MainWindow):</span>
<span id="cb2-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>args, obj<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>kwargs):</span>
<span id="cb2-5">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">super</span>(MainWindow, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>).<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>args, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>kwargs)</span>
<span id="cb2-6">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.setupUi(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>)</span>
<span id="cb2-7">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.ApiPushButton.clicked.<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">connect</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.sayHello)</span>
<span id="cb2-8"></span>
<span id="cb2-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> sayHello(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb2-10">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hello World"</span>)</span>
<span id="cb2-11">    </span>
<span id="cb2-12"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">__name__</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'__main__'</span>:</span>
<span id="cb2-13">    app <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> QApplication(sys.argv)</span>
<span id="cb2-14">    mainWindow <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> MainWindow()</span>
<span id="cb2-15">    mainWindow.show()</span>
<span id="cb2-16">    app.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">exec</span>()</span></code></pre></div>



 ]]></description>
  <category>learning</category>
  <category>code</category>
  <category>python</category>
  <guid>https://hstaudt.github.io/posts/2023/08/1st_pyqt.html</guid>
  <pubDate>Wed, 02 Aug 2023 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Using dotnet Uri</title>
  <dc:creator>hstaudt </dc:creator>
  <link>https://hstaudt.github.io/posts/2023/06/using_uri.html</link>
  <description><![CDATA[ 





<section id="using-dotnet-uri-class" class="level2">
<h2 class="anchored" data-anchor-id="using-dotnet-uri-class">Using dotnet Uri Class</h2>
<p>I’m learning C# and to make it more fun and useful, I decided to write a <a href="https://en.wikipedia.org/wiki/Gopher_(protocol)">gopher client</a>. It’s still a long way - but you have to start somehow :-)</p>
<p>In my first lines of code I wanted to create a <a href="https://learn.microsoft.com/en-us/dotnet/api/system.net.sockets.socket?view=net-7.0">Socket</a> that connects to a given server. Well, things are easy if you can make sure that a given URI (gopher://example.com) is reachable and the server is listening on port 70. And if not?</p>
<p>First I tried a lot of error catching by hand, but when browsing the documentation I ran across the <a href="https://learn.microsoft.com/en-us/dotnet/api/system.uri?view=net-7.0">Uri-Class</a>, which I found a bit oversized for my purposes but still very useful.</p>
<p>So I decided that the user has to start the program with a URI like <code>myclient gopher://example.com</code>.</p>
<p>This URI goes into CSharp’s <code>args[]</code> array and can be processed:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode cs code-with-copy"><code class="sourceCode cs"><span id="cb1-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>args<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Length</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb1-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb1-3">    Console<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">WriteLine</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Please specify a URL. e.g gopher://example.com:70. The port-number is optional."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb1-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb1-6"></span>
<span id="cb1-7"></span>
<span id="cb1-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">try</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb1-9">    host <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> args<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ToString</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb1-10">    xUri <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Uri</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>host<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb1-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">catch</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb1-12">    Console<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">WriteLine</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Invalid URI"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb1-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-14"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb1-15"></span>
<span id="cb1-16"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>xUri<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Scheme</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gopher"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb1-17"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb1-18">    Console<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">WriteLine</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>$<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Protocol {xUri.Scheme} is not implemented"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb1-19">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-20"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb1-21"></span>
<span id="cb1-22"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>xUri<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Port</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb1-23"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb1-24">    Console<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">WriteLine</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Port number is not valid"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb1-25">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-26"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p>In my Socket-Class the DnsSafe property is used to resolve the IP-Address of the host:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode cs code-with-copy"><code class="sourceCode cs"><span id="cb2-1">Console<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Write</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>$<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"resolving {host}..."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb2-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">try</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb2-3">    IPHostEntry ipHostInfo <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>  Dns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetHostEntry</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>host<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb2-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ipAddress</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ipHostInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">AddressList</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb2-5">    Console<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">WriteLine</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>$<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" Got {this.ipAddress}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb2-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">catch</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb2-7">    Console<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">WriteLine</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>$<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Error: Could not resolve host {host}."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb2-8"></span>
<span id="cb2-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>


</section>

 ]]></description>
  <category>learning</category>
  <category>code</category>
  <category>c#</category>
  <guid>https://hstaudt.github.io/posts/2023/06/using_uri.html</guid>
  <pubDate>Sat, 10 Jun 2023 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Post With Code</title>
  <dc:creator>Harlow Malloc</dc:creator>
  <link>https://hstaudt.github.io/posts/post-with-code/</link>
  <description><![CDATA[ 





<p>This is a post with executable code.</p>



 ]]></description>
  <category>news</category>
  <category>code</category>
  <category>analysis</category>
  <guid>https://hstaudt.github.io/posts/post-with-code/</guid>
  <pubDate>Wed, 31 May 2023 22:00:00 GMT</pubDate>
  <media:content url="https://hstaudt.github.io/posts/post-with-code/image.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Welcome To My Blog</title>
  <dc:creator>Tristan O&#39;Malley</dc:creator>
  <link>https://hstaudt.github.io/posts/welcome/</link>
  <description><![CDATA[ 





<p>This is the first post in a Quarto blog. Welcome!</p>
<p><img src="https://hstaudt.github.io/posts/welcome/thumbnail.jpg" class="img-fluid"></p>
<p>Since this post doesn’t specify an explicit <code>image</code>, the first image in the post will be used in the listing page of posts.</p>



 ]]></description>
  <category>news</category>
  <guid>https://hstaudt.github.io/posts/welcome/</guid>
  <pubDate>Sun, 28 May 2023 22:00:00 GMT</pubDate>
</item>
<item>
  <title>First Post</title>
  <dc:creator>Heiko </dc:creator>
  <link>https://hstaudt.github.io/posts/2023/06/Hello, World.html</link>
  <description><![CDATA[ 





<p>This is the first post in thins Blog</p>
<div id="b9557acc" class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> datetime</span>
<span id="cb1-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(datetime.datetime.now())</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>2023-06-01 13:25:33.273028</code></pre>
</div>
</div>
<p>Above datetime is now() :-)</p>
<p>Einstein’s theory of special relatively that expresses the equivalence of mass and energy:</p>
<p><img src="https://latex.codecogs.com/png.latex?E%20=%20mc%5E%7B2%7D"></p>



 ]]></description>
  <guid>https://hstaudt.github.io/posts/2023/06/Hello, World.html</guid>
  <pubDate>Wed, 24 Apr 2024 12:30:06 GMT</pubDate>
</item>
</channel>
</rss>
